{
  "ver": "1.0.22",
  "uuid": "15ffd034-bee7-4145-bc2a-2438dfaefb45",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\n\n  attribute vec3 a_position;\n  attribute vec2 a_uv0;\n  varying vec2 uv0;\n  void main () {\n      vec4 pos = cc_matViewProj * vec4(a_position, 1);\n      gl_Position = pos;\n      uv0 = a_uv0;\n  }\n",
        "frag": "\nprecision highp float;\n\nuniform sampler2D texture;\n\nvarying vec2 uv0;\nuniform vec4 iResolution;\nuniform vec4 color;\nconst float radius = 1.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy;\n    vec2 unit = 1.0 / iResolution.xy;\n    vec4 texel = texture2D(texture, uv);\n    vec4 finalColor = vec4(0.0);\n    float density = 0.0;\n\n    if(texel.a >= 1.0)\n    {\n        finalColor = texel;\n    }\n    else\n    {\n        for(int i = 0; i < (int(radius)); ++i)\n        {\n            density += texture2D(texture, vec2(uv.x + unit.x * float(i), uv.y + unit.y * float(i))).a;\n            density += texture2D(texture, vec2(uv.x - unit.x * float(i), uv.y + unit.y * float(i))).a;\n            density += texture2D(texture, vec2(uv.x - unit.x * float(i), uv.y - unit.y * float(i))).a;\n            density += texture2D(texture, vec2(uv.x + unit.x * float(i), uv.y - unit.y * float(i))).a;\n        }\n        density = density / radius;\n        finalColor = vec4(color.rgb * density, density);\n        finalColor += vec4(texel.rgb * texel.a, texel.a);\n    }\n    fragColor = finalColor;\n}\n\nvoid main()\n{\n    mainImage(gl_FragColor, uv0.xy);\n}\n"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  vec4 cc_time;\n\n  vec4 cc_screenSize;\n\n  vec4 cc_screenScale;\n\n  vec4 cc_nativeSize;\n\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n\n  vec4 cc_exposure;\n\n  vec4 cc_mainLitDir;\n\n  vec4 cc_mainLitColor;\n\n  vec4 cc_ambientSky;\n  vec4 cc_ambientGround;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\n\n  in vec3 a_position;\n  in vec2 a_uv0;\n  out vec2 uv0;\n  void main () {\n      vec4 pos = cc_matViewProj * vec4(a_position, 1);\n      gl_Position = pos;\n      uv0 = a_uv0;\n  }\n",
        "frag": "\nprecision highp float;\n\nuniform sampler2D texture;\n\nin vec2 uv0;\nuniform RABS{\n  vec4 iResolution;\n  vec4 color;\n\n}\nconst float radius = 1.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy;\n    vec2 unit = 1.0 / iResolution.xy;\n    vec4 texel = texture2D(texture, uv);\n    vec4 finalColor = vec4(0.0);\n    float density = 0.0;\n\n    if(texel.a >= 1.0)\n    {\n        finalColor = texel;\n    }\n    else\n    {\n        for(int i = 0; i < (int(radius)); ++i)\n        {\n            density += texture2D(texture, vec2(uv.x + unit.x * float(i), uv.y + unit.y * float(i))).a;\n            density += texture2D(texture, vec2(uv.x - unit.x * float(i), uv.y + unit.y * float(i))).a;\n            density += texture2D(texture, vec2(uv.x - unit.x * float(i), uv.y - unit.y * float(i))).a;\n            density += texture2D(texture, vec2(uv.x + unit.x * float(i), uv.y - unit.y * float(i))).a;\n        }\n        density = density / radius;\n        finalColor = vec4(color.rgb * density, density);\n        finalColor += vec4(texel.rgb * texel.a, texel.a);\n    }\n    fragColor = finalColor;\n}\n\nvoid main()\n{\n    mainImage(gl_FragColor, uv0.xy);\n}\n"
      }
    }
  ],
  "subMetas": {}
}